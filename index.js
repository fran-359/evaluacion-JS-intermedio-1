/* Actividad N¬∞1
  Escribe una funci√≥n llamada `determinarPosNegCero` que tome un n√∫mero como argumento y devuelva un mensaje indicando si el n√∫mero es positivo, negativo o cero.
  Si el n√∫mero es mayor que cero, debe devolver "Positivo". Si el n√∫mero es menor que cero, debe devolver "Negativo".
  Y si el n√∫mero es igual a cero, debe devolver "Cero".
*/
function determinarPosNegCero() {}

/* Actividad N¬∞2
  Crea una funci√≥n llamada `elegirBebida` que tome una opci√≥n de bebida como argumento (por ejemplo: "agua", "jugo" o "refresco").
  Utiliza una declaraci√≥n `switch` para devolver un mensaje que indique la bebida elegida.
  Si la opci√≥n es "agua", el mensaje debe ser "Has elegido agua.".
  Si la opci√≥n es "jugo", el mensaje debe ser "Has elegido jugo.".
  Si la opci√≥n es "refresco", el mensaje debe ser "Has elegido refresco.".
  Si la opci√≥n no es ninguna de estas, el mensaje debe ser "Opci√≥n no v√°lida.".
*/
function elegirBebida() {}

/* Actividad N¬∞3
  Crea una funci√≥n llamada `elegirFruta` que tome una fruta como argumento (por ejemplo: "manzana", "pera" o "naranja").
  Utiliza una declaraci√≥n `switch` para devolver un mensaje que indique la fruta elegida.
  Si la opci√≥n es "manzana", el mensaje debe ser "Has elegido una manzana.".
  Si la opci√≥n es "pera", el mensaje debe ser "Has elegido una pera.".
  Si la opci√≥n es "naranja", el mensaje debe ser "Has elegido una naranja.".
*/
function elegirFruta() {}

/* Actividad N¬∞4
  Escribe una funci√≥n llamada `multiplicarValores` que tome un array multidimensional como argumento.
  Este array contiene tres sub-arrays, cada uno de ellos contiene valores num√©ricos.
  La funci√≥n debe multiplicar cada valor en cada sub-array por 2 y devolver el array modificado.
*/
function multiplicarValores() {}

/* Actividad N¬∞5
  Crea un objeto llamado `persona` con tres propiedades: `nombre`, `edad` y `profesion`.
  Luego, implementa una funci√≥n llamada `manejarObjeto` que reciba el objeto `persona` como argumento.
  Dentro de la funci√≥n, agrega una nueva propiedad `ciudad` con el valor "Madrid".
  Luego, modifica el valor de la propiedad `edad` para que sea 29.
  Finalmente, elimina la propiedad `profesion` del objeto y devuelve el objeto modificado.
*/

function manejarObjeto(persona) {}

/* Actividad N¬∞6
  Crea una funci√≥n llamada potenciaNumeros que reciba dos n√∫meros como argumentos: la base y el exponente.
  Debes implementar la l√≥gica necesaria para calcular la potencia de la base elevada al exponente.
  Luego, retorna el resultado de esta operaci√≥n.

  üö®üö® IMPORTANTE!!!!
      LA VARIABLE potenciaNumeros DEBE SER LA FUNCION A DECLARAR!!!!
      DEBE MANTENER EL NOMBRE PERO DEBE SER UNA FUNCION

  üößüöß Si no est√°s familiarizado con la potencia
  recuerda que elevar una base a un exponente significa multiplicar la base por s√≠ misma el n√∫mero de veces indicado por el exponente.
  Por ejemplo, 2 elevado a la 3 (2^3) es igual a 2 * 2 * 2 = 8.
  üößüöß
*/

const potenciaNumeros = false;


// ‚ùåNO ELIMINAR NI MODIFICAR NADA DEBAJO DE ESTA LINEA‚ùå
module.exports = {
  determinarPosNegCero,
  elegirBebida,
  elegirFruta,
  manejarObjeto,
  multiplicarValores,
  potenciaNumeros
}